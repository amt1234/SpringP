content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="com.bridgeit.hibernate.Employee"><rhs name\="com.bridgeit.hibernate.Employee"/></lhs><lhs name\="com.bridgeit.hibernate.Excecutive"><rhs name\="com.bridgeit.hibernate.Excecutive"/></lhs><lhs name\="com.bridgeit.inheritance2.Bicycle"><rhs name\="com.bridgeit.inheritance2.Bicycle"/><rhs name\="com.bridgeit.inheritance2.MountainBicycle"/><rhs name\="com.bridgeit.inheritance2.SwingBicycle"/></lhs><lhs name\="com.bridgeit.inheritance2.MountainBicycle"><rhs name\="com.bridgeit.inheritance2.MountainBicycle"/></lhs><lhs name\="com.bridgeit.inheritance2.SwingBicycle"><rhs name\="com.bridgeit.inheritance2.SwingBicycle"/></lhs><lhs name\="org.hibernate.criterion.EnhancedProjection"><rhs name\="org.hibernate.criterion.ProjectionList"/></lhs><lhs name\="org.hibernate.criterion.Projection"><rhs name\="org.hibernate.criterion.ProjectionList"/></lhs><lhs name\="org.hibernate.criterion.ProjectionList"><rhs name\="org.hibernate.criterion.ProjectionList"/></lhs><lhs name\="org.springframework.http.HttpEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="org.springframework.http.ResponseEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.AbstractGenericHttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.GenericHttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.HttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/><rhs name\="org.springframework.http.converter.ByteArrayHttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.AbstractHttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/><rhs name\="org.springframework.http.converter.ByteArrayHttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"><rhs name\="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/></lhs><lhs name\="com.bridgeit.springrest.model.Employee"><rhs name\="com.bridgeit.springrest.model.Employee"/></lhs><lhs name\="java.util.Hashtable"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.Properties"/><rhs name\="java.util.Date"/></lhs><lhs name\="java.util.Dictionary"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Properties"><rhs name\="java.util.Properties"/></lhs><lhs name\="com.bridgeit.springrest.dao.EmployeeDao"><rhs name\="com.bridgeit.springrest.dao.EmployeeDaoImpl"/></lhs><lhs name\="fundoonote.dao.UserDao"><rhs name\="fundoonote.dao.UserDaoImpl"/></lhs><lhs name\="com.bridgeit.fundoonote.model.User"><rhs name\="com.bridgeit.fundoonote.model.User"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="org.springframework.amqp.core.AbstractDeclarable"><rhs name\="org.springframework.amqp.core.Queue"/><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Declarable"><rhs name\="org.springframework.amqp.core.Queue"/><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Queue"><rhs name\="org.springframework.amqp.core.Queue"/></lhs><lhs name\="org.springframework.amqp.core.AbstractExchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Exchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.TopicExchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisherAware"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.MessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.SmartLifecycle"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.Phased"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.RabbitAccessor"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="org.springframework.amqp.core.MessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.ChannelAwareMessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="com.bridgeit.programs.Runner"><rhs name\="com.bridgeit.programs.Runner"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactoryAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitOperations"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.AmqpTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.support.ListenerContainerAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.support.PublisherCallbackChannel$Listener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.AmqpAdmin"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/></lhs><lhs name\="jwt.CreateJWT"><rhs name\="jwt.CreateJWT"/></lhs><lhs name\="jwt.JwtProgram"><rhs name\="jwt.JwtProgram"/></lhs><lhs name\="com.bridgeit.fundoonote.jwt.JwtProgram"><rhs name\="com.bridgeit.fundoonote.jwt.JwtProgram"/></lhs><lhs name\="java.lang.Enum"><rhs name\="org.springframework.web.bind.annotation.RequestMethod"/><rhs name\="javax.persistence.GenerationType"/><rhs name\="javax.persistence.CascadeType"/><rhs name\="org.springframework.http.HttpStatus"/></lhs><lhs name\="com.bridgeit.fundoonote.model.EmailInfo"><rhs name\="com.bridgeit.fundoonote.model.EmailInfo"/></lhs><lhs name\="redis.clients.jedis.JedisCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.MultiKeyCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.AdvancedJedisCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.ScriptingCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.BasicCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.ClusterCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.SentinelCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.BinaryJedis"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.BinaryJedisCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.MultiKeyBinaryCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.AdvancedBinaryJedisCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.BinaryScriptingCommands"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="redis.clients.jedis.Jedis"><rhs name\="redis.clients.jedis.Jedis"/></lhs><lhs name\="io.lettuce.core.AbstractRedisClient"><rhs name\="io.lettuce.core.RedisClient"/></lhs><lhs name\="io.lettuce.core.RedisClient"><rhs name\="io.lettuce.core.RedisClient"/></lhs><lhs name\="io.lettuce.core.ConnectionPoint"><rhs name\="io.lettuce.core.RedisURI"/></lhs><lhs name\="io.lettuce.core.RedisURI"><rhs name\="io.lettuce.core.RedisURI"/></lhs><lhs name\="org.springframework.amqp.support.converter.MessageConverter"><rhs name\="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/></lhs><lhs name\="com.bridgeit.fundoonote.userservice.utility.IJwtProgram"><rhs name\="com.bridgeit.fundoonote.userservice.utility.JwtProgram"/></lhs><lhs name\="com.bridgeit.fundoonote.userservice.utility.JwtProgram"><rhs name\="com.bridgeit.fundoonote.userservice.utility.JwtProgram"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.service.INoteService"><rhs name\="com.bridgeit.fundoonote.noteservice.service.NoteService"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.service.NoteService"><rhs name\="com.bridgeit.fundoonote.noteservice.service.NoteService"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.dao.INoteDao"><rhs name\="com.bridgeit.fundoonote.noteservice.dao.NoteDao"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.dao.NoteDao"><rhs name\="com.bridgeit.fundoonote.noteservice.dao.NoteDao"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.model.Note"><rhs name\="com.bridgeit.fundoonote.noteservice.model.Note"/></lhs><lhs name\="java.util.Date"><rhs name\="java.util.Date"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="com.bridgeit.fundoonote.noteservice.model.ResponseDto"><rhs name\="com.bridgeit.fundoonote.noteservice.model.ResponseDto"/></lhs><lhs name\="com.bridgeit.fundoonote.labelservice.model.LabelDto"><rhs name\="com.bridgeit.fundoonote.labelservice.model.LabelDto"/></lhs><lhs name\="com.bridgeit.fundoonote.labelservice.model.Label"><rhs name\="com.bridgeit.fundoonote.labelservice.model.Label"/></lhs><lhs name\="java.io.FilterInputStream"><rhs name\="java.io.BufferedInputStream"/></lhs><lhs name\="java.io.InputStream"><rhs name\="java.io.BufferedInputStream"/><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.io.BufferedInputStream"/><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.io.BufferedInputStream"/><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.io.BufferedInputStream"><rhs name\="java.io.BufferedInputStream"/></lhs><lhs name\="org.springframework.util.MimeType"><rhs name\="org.springframework.http.MediaType"/></lhs><lhs name\="org.springframework.http.MediaType"><rhs name\="org.springframework.http.MediaType"/></lhs><lhs name\="org.springframework.http.converter.ByteArrayHttpMessageConverter"><rhs name\="org.springframework.http.converter.ByteArrayHttpMessageConverter"/></lhs><lhs name\="com.bridgeit.fundoonote.userservice.model.UserProfile"><rhs name\="com.bridgeit.fundoonote.userservice.model.UserProfile"/></lhs></history>
content_assist_number_of_computers=33
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=13
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
